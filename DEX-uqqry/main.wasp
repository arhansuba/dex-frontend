app DEX {
  wasp: {
    version: "^0.13.0"
  },
  title: "DEX",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id     Int     @id @default(autoincrement())
    trades Trade[]
psl=}

entity Trade {=psl
    id           Int    @id @default(autoincrement())
    user         User   @relation(fields: [userId], references: [id])
    userId       Int
    tokenPair    String
    tradeVolume  Float
    exchangeName String
psl=}

action executeTrade {
  fn: import { executeTrade } from "@src/actions.js",
  entities: [User, Trade]
}

action updateTrade {
  fn: import { updateTrade } from "@src/actions.js",
  entities: [Trade]
}

query getTrades {
  fn: import { getTrades } from "@src/queries.js",
  entities: [Trade]
}

query getTrade {
  fn: import { getTrade } from "@src/queries.js",
  entities: [Trade]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}

route TradeRoute { path: "/trade", to: TradePage }
page TradePage {
  component: import TradePage from "@src/pages/Trade.jsx",
  authRequired: true
}

route TradeDetailRoute { path: "/trade/:tradeId", to: TradeDetailPage }
page TradeDetailPage {
  component: import TradeDetailPage from "@src/pages/TradeDetail.jsx",
  authRequired: true
}